var t=Object.defineProperty,e=(e,s,i)=>((e,s,i)=>s in e?t(e,s,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[s]=i)(e,"symbol"!=typeof s?s+"":s,i);import{p as s,P as i}from"./phaser-hyM8z1KO.js";!function(){const t=document.createElement("link").relList;if(!(t&&t.supports&&t.supports("modulepreload"))){for(const t of document.querySelectorAll('link[rel="modulepreload"]'))e(t);new MutationObserver((t=>{for(const s of t)if("childList"===s.type)for(const t of s.addedNodes)"LINK"===t.tagName&&"modulepreload"===t.rel&&e(t)})).observe(document,{childList:!0,subtree:!0})}function e(t){if(t.ep)return;t.ep=!0;const e=function(t){const e={};return t.integrity&&(e.integrity=t.integrity),t.referrerPolicy&&(e.referrerPolicy=t.referrerPolicy),"use-credentials"===t.crossOrigin?e.credentials="include":"anonymous"===t.crossOrigin?e.credentials="omit":e.credentials="same-origin",e}(t);fetch(t.href,e)}}();const a="Preloader",n="MainMenu",r="Game",o="DebugUIScene",l="assets",h="physics",c=1/0,d=1/0,m="waiting_to_start",u="playing",p="game_over",f="level_complete";class g extends s.Scene{constructor(){super("Boot")}preload(){}create(){this.scene.start(a)}}const y=t=>"coin"===t.label,v=t=>"duck"===t.label,x=t=>"finish"===t.label,C=t=>"enemy"===t.label;let b=0;const I=()=>b,w=t=>{b=t};class A{constructor(t){e(this,"scene"),e(this,"text"),this.scene=t,this.text=this.scene.add.text(16,16,"Coins: 0",{fontFamily:"Roboto",fontSize:"18px",color:"#ffffff",stroke:"#000000",strokeThickness:3}).setScrollFactor(0)}update(){this.text.setText("Coins: "+I())}destroy(){this.text.destroy()}}const E=t=>"fallSensor"===t.label;let P=0;const _=()=>P;class M extends i.GameObjects.TileSprite{constructor(t,s,i=.5){const a=t.scale.width,n=t.scale.height,r=n/t.textures.get(s).getSourceImage().height;super(t,0,0,a,n,s),e(this,"customScrollFactorX"),this.customScrollFactorX=i,this.setOrigin(0,0),this.setScrollFactor(0),this.tileScaleY=r,this.tileScaleX=r,t.add.existing(this)}update(){this.tilePositionX=this.scene.cameras.main.scrollX*this.customScrollFactorX}}class S{constructor(t,s){e(this,"scene"),e(this,"camera"),this.scene=t,this.camera=this.scene.cameras.main,this.setupCamera(s)}setupBounds(){this.scene.matter.world.setBounds(0,0,1e4,4e3),this.camera.setBounds(0,0,1e4,4e3)}setupCamera(t){this.setupBounds(),this.camera.startFollow(t,!0,.5,.5),this.camera.setLerp(.5,.5),this.camera.setZoom(1)}handleZoomIn(){this.scene.tweens.add({targets:this.camera,zoom:1.5,duration:700,ease:"Power2"})}}function L(t,e,s){Object.entries(s).forEach((([s,i])=>{i.frames<=1?t.create({key:s,frames:[{key:e,frame:i.prefix}],repeat:0}):t.create({key:s,frames:t.generateFrameNames(e,{prefix:i.prefix,start:1,end:i.frames,zeroPad:4,suffix:".png"}),repeat:i.loop,frameRate:i.frameRate})}))}const k=(t,e)=>{Object.entries(e).forEach((([e,s])=>{if(s.nextAnimation){const a=s.nextAnimation;t.on(i.Animations.Events.ANIMATION_COMPLETE,(s=>{s.key===e&&t.play(a)}))}}))},G=t=>{var e;const s=(null==(e=t.label)?void 0:e.toLowerCase())??"";return["platform","crate-big","crate-small"].includes(s)},T="DUCK_FALL",D="DUCK_IDLE",N="DUCK_RUN",O={DUCK_FALL:{prefix:"player/fall/duck-fall-",frames:10,loop:0,frameRate:30},DUCK_DEAD:{prefix:"player/dead/duck-dead-",frames:10,loop:0,frameRate:30},DUCK_IDLE:{prefix:"player/idle/duck-idle-",frames:10,loop:0,frameRate:30},DUCK_JUMP:{prefix:"player/jump/duck-jump-",frames:12,loop:0,nextAnimation:T,frameRate:30},DUCK_RUN:{prefix:"player/run/duck-run-",frames:14,loop:-1,frameRate:30}};class B extends Phaser.Physics.Matter.Sprite{constructor(t,s,i){const a=t.cache.json.get(h);super(t.matter.world,s,i,l,O[D].prefix+"0001.png",{shape:a["duck-idle"]}),e(this,"cursors"),e(this,"wasd"),e(this,"isGrounded",!1),e(this,"groundContacts",new Set),e(this,"currentAnimKey",""),e(this,"jumpInProgress",!1),e(this,"lastJumpTime",0),e(this,"isAlive",!0),e(this,"isLevelComplete",!1),e(this,"justLanded",!1),t.matter.world.on("collisionstart",this.handleCollisionStart,this),t.matter.world.on("collisionend",this.handleCollisionEnd,this),this.setFixedRotation(),this.setupControls(),this.playAnimation(D,!0),this.isAlive=!0,k(this,O),t.add.existing(this)}setupControls(){var t,e;this.scene.sys.game.device.os.desktop?(this.cursors=null==(t=this.scene.input.keyboard)?void 0:t.createCursorKeys(),this.wasd=null==(e=this.scene.input.keyboard)?void 0:e.addKeys("W,A,D")):this.createMobileControls()}createMobileControls(){}update(t,e){var s,i,a,n,r,o,l,h,c,d,m,u,p,f;if(!this.isAlive)return;if(!this.cursors||!this.wasd)return;const g=(null==(s=this.cursors.left)?void 0:s.isDown)||(null==(i=this.wasd.A)?void 0:i.isDown),y=(null==(a=this.cursors.right)?void 0:a.isDown)||(null==(n=this.wasd.D)?void 0:n.isDown),v=(null==(r=this.cursors.up)?void 0:r.isDown)||(null==(o=this.wasd.W)?void 0:o.isDown);if(!this.isLevelComplete){let t=0;if(g?(t=-3,this.flipX=!0):y&&(t=3,this.flipX=!1),this.setVelocityX(t),v&&this.isGrounded)return this.setVelocityY(-8),this.jumpInProgress=!0,this.lastJumpTime=this.scene.time.now,this.playAnimation("DUCK_JUMP",!0),void this.once(Phaser.Animations.Events.ANIMATION_COMPLETE,(()=>{this.isGrounded||this.playAnimation(T,!0)}))}if(this.isGrounded){if(this.isGrounded&&!this.jumpInProgress)if(this.justLanded){const t=(null==(h=null==(l=this.cursors)?void 0:l.left)?void 0:h.isDown)||(null==(d=null==(c=this.wasd)?void 0:c.A)?void 0:d.isDown),e=(null==(u=null==(m=this.cursors)?void 0:m.right)?void 0:u.isDown)||(null==(f=null==(p=this.wasd)?void 0:p.D)?void 0:f.isDown);t||e?this.playAnimation(N):this.playAnimation(D,!1),this.justLanded=!1}else this.isLevelComplete?this.playAnimation(D,!1):this.body&&Math.abs(this.body.velocity.x)>.1?this.playAnimation(N):this.playAnimation(D,!1)}else this.jumpInProgress||this.currentAnimKey!==T&&this.scene.time.now-this.lastJumpTime>150&&this.playAnimation(T)}playAnimation(t,e=!1){if(this.currentAnimKey===t){if(!e)return;this.anims.stop()}this.play(t),this.currentAnimKey=t}handleCollisionStart(t){for(const{bodyA:s,bodyB:i}of t.pairs)v(s)&&G(i)?this.groundContacts.add(i):v(i)&&G(s)&&this.groundContacts.add(s);const e=this.isGrounded;this.isGrounded=this.groundContacts.size>0,this.isGrounded&&!e&&(this.jumpInProgress=!1,this.justLanded=!0)}handleCollisionEnd(t){for(const{bodyA:e,bodyB:s}of t.pairs)v(e)&&G(s)?this.groundContacts.delete(s):v(s)&&G(e)&&this.groundContacts.delete(e);this.isGrounded=this.groundContacts.size>0}finishLevel(){this.isLevelComplete=!0,this.setVelocityX(0)}kill(){this.isAlive=!1,this.playAnimation("DUCK_DEAD"),this.setVelocityX(0),this.setVelocityY(0),this.setStatic(!0)}}const H={ENEMY_IDLE:{prefix:"enemy/enemy.png",frames:10,loop:0,frameRate:0}},X=class t extends Phaser.Physics.Matter.Sprite{constructor(t,s,i){const a=t.cache.json.get(h);super(t.matter.world,s,i,l,H.ENEMY_IDLE.prefix,{shape:a.enemy}),e(this,"speed",2),e(this,"direction",1),e(this,"platformBounds"),t.add.existing(this),t.matter.world.on("collisionstart",this.handleCollisionStart,this),this.setFixedRotation()}handleGameOver(){this.setVelocity(0,0)}update(){if(!this.platformBounds)return;this.setVelocity(this.speed*this.direction,0);const{left:t,right:e}=this.getBounds(),{left:s,right:i}=this.platformBounds;e>=i&&1===this.direction?this.direction=-1:t<=s&&-1===this.direction&&(this.direction=1)}handleCollisionStart(e){if(this.platformBounds)return;const s=this.body,i=s.id,a=s.parts?s.parts.map((t=>t.id)):[i];a.includes(i)||a.push(i);for(const{bodyA:n,bodyB:r}of e.pairs){let e=null,s=null;if(a.includes(n.id)&&G(r)?(e=n,s=r):a.includes(r.id)&&G(n)&&(e=r,s=n),e&&s){const e=s.id,i=t.platformCache.get(e);if(i)this.platformBounds=i;else{const{min:i,max:a}=s.bounds,n={left:i.x,right:a.x};t.platformCache.set(e,n),this.platformBounds=n}this.scene.matter.world.off("collisionstart",this.handleCollisionStart,this);break}}}};e(X,"platformCache",new Map);let F=X;const R="COIN_IDLE",U="COIN_COLLECT",j={COIN_IDLE:{prefix:"coin/coin-idle/coin-idle-",frames:23,loop:-1,frameRate:30},COIN_COLLECT:{prefix:"coin/coin-collect/coin-collect-",frames:8,loop:0,frameRate:30}};class V extends Phaser.Physics.Matter.Sprite{constructor(t,e,s){const i=t.cache.json.get(h);super(t.matter.world,e,s,l,j[R].prefix+"0001.png",{shape:i.coin,isStatic:!0,isSensor:!0}),this.play(R),t.add.existing(this)}collect(){this.play(U),this.scene.matter.world.remove(this),this.once(Phaser.Animations.Events.ANIMATION_COMPLETE,(()=>{var t;(null==(t=this.anims.currentAnim)?void 0:t.key)===U&&this.destroy(!0)}))}}const Y={LEFT:{prefix:"platforms/platform-left.png",frames:1,loop:0,frameRate:0},RIGHT:{prefix:"platforms/platform-right.png",frames:1,loop:0,frameRate:0},MIDDLE:{prefix:"platforms/platform-middle.png",frames:1,loop:0,frameRate:0}};class K extends Phaser.Physics.Matter.Sprite{constructor(t,e,s,i,a){((t,e,s)=>{if(t.textures.exists(s)){const i=t.make.renderTexture({width:26*e,height:24},!1);return i.draw(s,0,0),i}(function(t,e,s){const i=t.make.container({x:0,y:0,add:!1}),a=26*e,n=t.make.image({key:l,frame:Y.LEFT.prefix,x:13,y:12,add:!1}),r=t.make.tileSprite({key:l,frame:Y.MIDDLE.prefix,x:26*e/2,y:13.5,width:26*(e-2),height:24,add:!1}),o=t.make.image({key:l,frame:Y.RIGHT.prefix,x:a-13,y:12,add:!1});i.add([n,r,o]);const h=t.make.renderTexture({width:a,height:24},!1);h.draw(i),h.saveTexture(s),i.destroy()})(t,e,s)})(t,i,a);const n=t.cache.json.get(h).platform,{collisionFilter:r}=n,o={label:"platform",isStatic:n.isStatic,collisionFilter:{category:r.category,group:r.group,mask:r.mask}};super(t.matter.world,e,s,a,void 0,o),this.segmentCount=i,t.add.existing(this)}}const $={CRATE_BIG_IDLE:{prefix:"crate/crate-big.png",frames:1,loop:0,frameRate:0}};class z extends Phaser.Physics.Matter.Sprite{constructor(t,e,s){const i=t.cache.json.get(h);super(t.matter.world,e,s,l,$.CRATE_BIG_IDLE.prefix,{shape:i["crate-big"]}),t.add.existing(this)}}const J={CRATE_SMALL_IDLE:{prefix:"crate/crate-small.png",frames:1,loop:0,frameRate:0}};class W extends Phaser.Physics.Matter.Sprite{constructor(t,e,s){const i=t.cache.json.get(h);super(t.matter.world,e,s,l,J.CRATE_SMALL_IDLE.prefix,{shape:i["crate-small"]}),t.add.existing(this)}}const Z={FINISH_IDLE:{prefix:"finish/finish-idle/finish-idle.png",frames:0,loop:0,frameRate:0},FINISH_ACTIVATED:{prefix:"finish/finish-activated/finish-activated-",frames:19,loop:0,nextAnimation:"FINISH_ACTIVE",frameRate:30},FINISH_ACTIVE:{prefix:"finish/finish-active/finish-active-",frames:8,loop:-1,frameRate:30}};class Q extends Phaser.Physics.Matter.Sprite{constructor(t,s,i){const a=t.cache.json.get(h);super(t.matter.world,s,i,l,Z.FINISH_IDLE.prefix,{shape:a.finish,isStatic:!0,isSensor:!0}),e(this,"isActivated",!1),k(this,Z),t.add.existing(this)}activate(){this.isActivated||(this.play("FINISH_ACTIVATED"),this.isActivated=!0)}}class q{constructor(t){e(this,"seed"),this.seed=t}next(){let t=this.seed+=1831565813;return t=Math.imul(t^t>>>15,1|t),t^=t+Math.imul(t^t>>>7,61|t),((t^t>>>14)>>>0)/4294967296}nextInt(t,e){return Math.floor(this.next()*(e-t)+t)}choice(t){return t[this.nextInt(0,t.length)]}}class tt{constructor(t,s){e(this,"scene"),e(this,"levelNumber"),e(this,"prng"),e(this,"platforms",[]),e(this,"coins",[]),e(this,"enemies",[]),e(this,"crates",[]),e(this,"player"),e(this,"levelMinX",0),e(this,"levelMaxX",0),e(this,"levelLowestY",0),e(this,"MAX_JUMP_DISTANCE_X",200),e(this,"MAX_JUMP_HEIGHT_UP",120),e(this,"MAX_FALL_HEIGHT",400),e(this,"COIN_HEIGHT",28),e(this,"ENEMY_HEIGHT",40),e(this,"CRATE_SMALL_HEIGHT",32),e(this,"CRATE_BIG_HEIGHT",64),e(this,"PLATFORM_DISPLAY_HEIGHT",32),e(this,"MIN_PLATFORM_LENGTH_WITH_ENEMY",10),e(this,"MIN_COIN_SPACING",64),this.scene=t,this.levelNumber=s,this.prng=new q(this.levelNumber)}generateLevel(){const t=this.getLevelGenerationParams(),e=this.prng.nextInt(t.minPlatforms,t.maxPlatforms+1);let s={x:150,y:300},i=0,a=null;const n=[];this.platforms=[],this.enemies=[],this.coins=[],this.crates=[],this.player=void 0,this.createPlayerStart(s);for(let o=0;o<e;o++){let e=t.minPlatformLength;const r=t.maxPlatformLength;e>r&&(e=r);const l=this.prng.nextInt(e,r+1);s=this.calculateNextPlatformPosition(s,l,a,t);const h=this.createPlatform(s,l,o);i+=this.populatePlatformWithCoins(h,t),o>0&&n.push(h),a=h}const r=n.filter((t=>t!==a));if(this.placeEnemiesAndCrates(r,t),this.createFinishPoint(a),this.calculateOverallBounds(),console.log(`Level generated with ${this.platforms.length} platforms, ${this.enemies.length} enemies, ${this.crates.length} crates, ${i} coins.`),!this.player)throw new Error("Level Generator: Player was not created!");return this.player}getLevelGenerationParams(){const t=10+this.levelNumber,e=15+this.levelNumber,s=.3+Math.min(.3,.02*this.levelNumber),i=.25+Math.min(.2,.01*this.levelNumber),a=(t+e)/2,n=Math.floor(a*s),r=Math.floor(a*i);return{minPlatforms:t,maxPlatforms:e,minPlatformLength:4,maxPlatformLength:12,minHorizontalGap:120,maxHorizontalGap:this.MAX_JUMP_DISTANCE_X,minVerticalGap:-this.MAX_JUMP_HEIGHT_UP,maxVerticalGap:this.MAX_FALL_HEIGHT,enemyProbability:s,crateProbability:i,requiredCoins:100,targetEnemies:n,targetCrates:r}}createPlayerStart(t){this.player=new B(this.scene,t.x-50,t.y-50-this.PLATFORM_DISPLAY_HEIGHT/2)}calculateNextPlatformPosition(t,e,s,i){let a=t.x,n=t.y;const r=16*e/2;if(s){const t=s.getBounds();let e=this.prng.nextInt(i.minHorizontalGap,i.maxHorizontalGap+1),o=this.prng.nextInt(i.minVerticalGap,i.maxVerticalGap+1);e=Math.min(e,this.MAX_JUMP_DISTANCE_X),o<0&&(o=Math.max(o,-this.MAX_JUMP_HEIGHT_UP));const l=20;Math.abs(o)<l&&(o=o>=0?l:-20,o=Phaser.Math.Clamp(o,i.minVerticalGap,i.maxVerticalGap)),a=t.right+e+r,n=s.y+o}return{x:a,y:n}}createPlatform(t,e,s){const i=new K(this.scene,t.x,t.y,e,0===s?"start":s===e-1?"end":"middle");return this.platforms.push(i),i}populatePlatformWithCoins(t,e){const s=t.getBounds(),i=s.width;let a=0;const n=Math.floor(i/this.MIN_COIN_SPACING),r=this.prng.nextInt(0,n+1);if(r>0){const t=(i-(r-1)*this.MIN_COIN_SPACING)/2,e=s.top-this.COIN_HEIGHT/2-5;for(let i=0;i<r;i++){const n=s.left+t+i*this.MIN_COIN_SPACING,r=16;if(Math.abs(n-s.centerX)<r)continue;const o=new V(this.scene,n,e);this.coins.push(o),a++}}return a}placeEnemiesAndCrates(t,e){if(0===t.length)return;const s=this.shuffleArray([...t]),i=Math.min(e.targetEnemies,s.length),a=Math.min(e.targetCrates,s.length-i);let n=0;for(let r=0;r<i&&n<s.length;r++){const t=s[n++],e=t.getBounds(),i=e.centerX,a=e.top-this.ENEMY_HEIGHT/2;if(t.segmentCount<this.MIN_PLATFORM_LENGTH_WITH_ENEMY){r--;continue}const o=new F(this.scene,i,a);this.enemies.push(o)}for(let r=0;r<a&&n<s.length;r++){const t=s[n++].getBounds(),e=t.centerX,i=this.prng.next()<.5,a=i?this.CRATE_BIG_HEIGHT:this.CRATE_SMALL_HEIGHT,r=t.top-a/2,o=i?new z(this.scene,e,r):new W(this.scene,e,r);this.crates.push(o)}}createFinishPoint(t){if(!t)return;const e=t.getBounds(),s=e.right-16,i=e.top-60;new Q(this.scene,s,i)}calculateOverallBounds(){if(0===this.platforms.length)return this.levelMinX=0,this.levelMaxX=1e3,this.levelLowestY=1/0,void console.warn("LevelGenerator: No platforms generated, using default bounds.");const t=this.platforms[0].getBounds();this.levelMinX=t.left,this.levelMaxX=t.right,this.levelLowestY=t.bottom;for(let e=1;e<this.platforms.length;e++){const t=this.platforms[e].getBounds();this.levelMinX=Math.min(this.levelMinX,t.left),this.levelMaxX=Math.max(this.levelMaxX,t.right),this.levelLowestY=Math.max(this.levelLowestY,t.bottom)}console.log(`Calculated Overall Bounds: minX=${this.levelMinX.toFixed(2)}, maxX=${this.levelMaxX.toFixed(2)}, lowestY=${this.levelLowestY.toFixed(2)}`)}getEnemies(){return this.enemies}getPlatforms(){return this.platforms}getCoins(){return this.coins}getCrates(){return this.crates}getOverallLevelBounds(){return{minX:this.levelMinX,maxX:this.levelMaxX,lowestY:this.levelLowestY}}shuffleArray(t){for(let e=t.length-1;e>0;e--){const s=this.prng.nextInt(0,e+1);[t[e],t[s]]=[t[s],t[e]]}return t}}class et extends s.Scene{constructor(){super(r),e(this,"background"),e(this,"player"),e(this,"overlayButton"),e(this,"restartTriggered",!1),e(this,"physicsEnabled",!1),e(this,"coinUI"),e(this,"gameState",m),e(this,"enemies",[]),e(this,"cameraManager"),e(this,"levelGenerator"),e(this,"createBackground",(()=>{this.background=new M(this,"background",.5)})),e(this,"checkCollisions",(({pairs:t})=>{for(const{bodyA:e,bodyB:s}of t)if(this.checkFallSensorCollision(e,s)||this.checkCoinCollision(e,s)||this.checkFinishCollision(e,s)||this.checkEnemyCollision(e,s))return}))}create(){this.createBackground(),this.setupWorldBounds(),this.initGame(),this.showUIOverlay(m),console.log("Launching DebugUIScene..."),this.scene.launch(o)}setupWorldBounds(){this.matter.world.setBounds(0,0,c,d),this.matter.world.enabled=!1}initGame(){if(w(0),0===_()&&(P=1),this.enemies=[],this.generateLevelEntities(),this.setupCollisions(),this.coinUI=new A(this),!this.player)throw new Error("Player not created during level generation!");this.cameraManager=new S(this,this.player)}generateLevelEntities(){const t=_();this.levelGenerator=new tt(this,t),this.player=this.levelGenerator.generateLevel(),this.enemies=this.levelGenerator.getEnemies();const e=this.levelGenerator.getOverallLevelBounds(),{minX:s,maxX:i,lowestY:a}=e,n=i-s,r=n+1e3,o=s+n/2;this.createFallSensor(a,o,r)}showUIOverlay(t,e=!0){if(this.overlayButton&&(this.overlayButton.destroy(),this.overlayButton=void 0),t===u)return void(this.gameState=t);const s=this.game.canvas.width/2,i=this.game.canvas.height/2;let a,n;switch(t){case m:a="ui/start.png",n=()=>{var t;null==(t=this.overlayButton)||t.destroy(),this.overlayButton=void 0,this.startGame()};break;case p:a="ui/game-over.png",n=()=>{this.restartTriggered||this.restartLevel()};break;case f:a="ui/start.png",n=()=>{this.restartTriggered||this.restartLevel()};break;default:return}this.overlayButton=this.add.image(s,i,l,a).setOrigin(.5).setScrollFactor(0).setDepth(1e3).setInteractive({useHandCursor:!0}),e&&(this.overlayButton.setAlpha(0),this.tweens.add({targets:this.overlayButton,alpha:1,duration:400,ease:"Power2"})),this.overlayButton.on("pointerup",n),this.gameState=t}startGame(){this.matter.world.enabled=!0,this.restartTriggered=!1,this.physicsEnabled=!0,this.showUIOverlay(u)}createFallSensor(t,e,s){const i=t+500+50;this.matter.add.rectangle(e,i,s,100,{isSensor:!0,isStatic:!0,label:"fallSensor",collisionFilter:{group:0,category:16,mask:23}})}setupCollisions(){this.matter.world.on("collisionstart",(t=>{this.physicsEnabled&&this.checkCollisions(t)}))}checkFallSensorCollision(t,e){return!!(E(t)&&v(e)||E(e)&&v(t))&&(this.handleGameOver(),!0)}checkEnemyCollision(t,e){return!!(C(t)&&v(e)||C(e)&&v(t))&&(this.handleGameOver(),!0)}checkFinishCollision(t,e){return!!(x(t)&&v(e)||x(e)&&v(t))&&(x(t)?t.gameObject.activate():x(e)&&e.gameObject.activate(),this.handleLevelComplete(),!0)}checkCoinCollision(t,e){return y(t)&&v(e)?(this.collectCoin(t),!0):!(!y(e)||!v(t)||(this.collectCoin(e),0))}collectCoin(t){const e=t.gameObject;null==e||e.collect(),w(I()+1),this.coinUI.update()}update(t,e){var i,a;if(!this.physicsEnabled)return;null==(i=this.player)||i.update(t,e),this.enemies.forEach((t=>t.update())),null==(a=this.background)||a.update(),this.scene.isActive(o)&&this.events.emit("updateDebugData",{playerX:this.player.x,playerY:this.player.y,platformCount:this.levelGenerator.getPlatforms().length,enemyCount:this.enemies.length,coinCount:this.levelGenerator.getCoins().length,crateCount:this.levelGenerator.getCrates().length});const n=this.cameras.main.worldView,r=new s.Geom.Rectangle(n.x-100,n.y-100,n.width+200,n.height+200);this.levelGenerator.getCoins().forEach((t=>{if(!t.body)return;const e=s.Geom.Rectangle.Contains(r,t.body.position.x,t.body.position.y);t.setVisible(e);const i=t.body;i&&"isStatic"in i&&i.isStatic||(e?t.setAwake():t.setToSleep())})),this.enemies.forEach((t=>{if(!t.body)return;const e=s.Geom.Rectangle.Contains(r,t.body.position.x,t.body.position.y);t.setVisible(e);const i=t.body;i&&"isStatic"in i&&i.isStatic||(e?t.setAwake():t.setToSleep())}))}handleGameOver(){this.gameState===u&&(this.player.kill(),this.physicsEnabled=!1,this.enemies.forEach((t=>t.handleGameOver())),this.cameraManager.handleZoomIn(),this.showUIOverlay(p))}handleLevelComplete(){this.gameState===u&&(this.player.finishLevel(),((t=1)=>{P+=t})(),this.enemies.forEach((t=>t.handleGameOver())),this.cameraManager.handleZoomIn(),this.showUIOverlay(f))}restartLevel(){this.restartTriggered||(this.restartTriggered=!0,this.physicsEnabled=!1,this.matter.world.enabled=!1,this.scene.isActive(o)&&this.scene.stop(o),this.scene.restart())}}class st extends s.Scene{constructor(){super("GameOver"),e(this,"camera"),e(this,"background"),e(this,"gameover_text")}create(){this.background=this.add.image(512,384,"background"),this.background.setAlpha(.5),this.gameover_text=this.add.text(512,384,"Game Over",{fontFamily:"Arial Black",fontSize:64,color:"#ffffff",stroke:"#000000",strokeThickness:8,align:"center"}),this.gameover_text.setOrigin(.5),this.gameover_text.setInteractive(),this.gameover_text.once("pointerdown",(()=>{this.scene.start(r)}))}}class it extends s.Scene{constructor(){super(n),e(this,"background"),e(this,"logo"),e(this,"title")}create(){this.background=this.add.image(512,384,"background"),this.title=this.add.text(512,460,"Main Menu",{fontFamily:"Arial Black",fontSize:38,color:"#ffffff",stroke:"#000000",strokeThickness:8,align:"center"}).setOrigin(.5),this.input.once("pointerdown",(()=>{this.scene.start(r)}))}}class at extends s.Scene{constructor(){super(a)}init(){this.add.image(512,384,"background"),this.add.rectangle(512,384,468,32).setStrokeStyle(1,16777215);const t=this.add.rectangle(282,384,4,28,16777215);this.load.on("progress",(e=>{t.width=4+460*e}))}preload(){this.load.setPath("assets"),this.load.atlas(l,"assets.png","assets.json"),this.load.json(h,"physics.json"),this.load.image("background","background.png")}create(){this.setupAnimations(),this.scene.start(n)}setupAnimations(){L(this.game.anims,l,O),L(this.game.anims,l,j),L(this.game.anims,l,Z)}}class nt{constructor(t,s,i){e(this,"scene"),e(this,"text"),e(this,"active",!1),this.scene=t,this.text=this.scene.add.text(s,i,"Debug Panel (Press Q)",{fontSize:"24px",color:"#ffffff",backgroundColor:"rgba(0,0,0,0.7)",padding:{x:8,y:5},fixedWidth:500}),this.text.setOrigin(1,0),this.text.setScrollFactor(0),this.text.setDepth(100),this.text.setVisible(this.active)}toggle(){this.active=!this.active,this.text.setVisible(this.active)}update(t){if(!this.active)return;let e="Debug Panel (Q)\n-----------------\n";for(const s in t)if(Object.prototype.hasOwnProperty.call(t,s)){const i=t[s];e+="PlayerPos"===s&&"object"==typeof i?`${s}: x=${i.x}, y=${i.y}\n`:"number"==typeof i?`${s}: ${i}\n`:`${s}: ${JSON.stringify(i)}\n`}this.text.setText(e)}destroy(){this.text.destroy()}}class rt extends i.Scene{constructor(){super(o),e(this,"debugPanel")}create(){var t;console.log("DebugUIScene created"),this.debugPanel=new nt(this,this.scale.width-10,10);const e=this.scene.get(r);e&&(e.events.on("updateDebugData",this.handleDebugDataUpdate,this),this.events.on(i.Scenes.Events.SHUTDOWN,(()=>{console.log("DebugUIScene shutting down, removing listener"),e.events.off("updateDebugData",this.handleDebugDataUpdate,this)}))),null==(t=this.input.keyboard)||t.on("keydown-Q",(()=>{var t;null==(t=this.debugPanel)||t.toggle()}))}handleDebugDataUpdate(t){var e;null==(e=this.debugPanel)||e.update(t)}}const ot={type:Phaser.AUTO,width:1920,height:1080,parent:"game-container",backgroundColor:"#028af8",scale:{mode:Phaser.Scale.EXPAND,autoCenter:Phaser.Scale.CENTER_BOTH},physics:{default:"matter",matter:{gravity:{x:0,y:1},debug:!0}},scene:[g,at,it,et,rt,st]};new s.Game(ot);
