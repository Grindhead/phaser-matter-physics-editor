var t=Object.defineProperty,e=(e,s,i)=>((e,s,i)=>s in e?t(e,s,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[s]=i)(e,"symbol"!=typeof s?s+"":s,i);import{p as s,P as i}from"./phaser-hyM8z1KO.js";!function(){const t=document.createElement("link").relList;if(!(t&&t.supports&&t.supports("modulepreload"))){for(const t of document.querySelectorAll('link[rel="modulepreload"]'))e(t);new MutationObserver((t=>{for(const s of t)if("childList"===s.type)for(const t of s.addedNodes)"LINK"===t.tagName&&"modulepreload"===t.rel&&e(t)})).observe(document,{childList:!0,subtree:!0})}function e(t){if(t.ep)return;t.ep=!0;const e=function(t){const e={};return t.integrity&&(e.integrity=t.integrity),t.referrerPolicy&&(e.referrerPolicy=t.referrerPolicy),"use-credentials"===t.crossOrigin?e.credentials="include":"anonymous"===t.crossOrigin?e.credentials="omit":e.credentials="same-origin",e}(t);fetch(t.href,e)}}();const a="Preloader",n="MainMenu",r="Game",o="DebugUIScene",l="enemy",h="barrel",c="assets",d="physics",u=1/0,g=1/0,m="playing",p="game_over",f="level_complete";class y extends s.Scene{constructor(){super("Boot")}preload(){}create(){console.log("Boot: create"),console.log("hello photonstorm"),this.scene.start(a)}}const b={LEFT:{prefix:"platforms/platform-left.png",frames:1,loop:0,frameRate:0},RIGHT:{prefix:"platforms/platform-right.png",frames:1,loop:0,frameRate:0},MIDDLE:{prefix:"platforms/platform-middle.png",frames:1,loop:0,frameRate:0}};class v extends Phaser.Physics.Matter.Sprite{constructor(t,s,i,a,n,r=!1){((t,e,s,i=!1)=>{if(t.textures.exists(s)){const a=t.make.renderTexture({width:i?24:26*e,height:i?26*e:24},!1);return a.draw(s,0,0),a}(function(t,e,s,i=!1){const a=t.make.container({x:0,y:0,add:!1}),n=26*e,r=t.make.image({key:c,frame:b.LEFT.prefix,x:13,y:12,add:!1}),o=t.make.tileSprite({key:c,frame:b.MIDDLE.prefix,x:26*e/2,y:13.5,width:26*(e-2),height:24,add:!1}),l=t.make.image({key:c,frame:b.RIGHT.prefix,x:n-13,y:12,add:!1});a.add([r,o,l]);const h=t.make.renderTexture({width:i?24:n,height:i?n:24},!1);i&&(a.setRotation(Math.PI/2),a.setPosition(24,0)),h.draw(a),h.saveTexture(s),a.destroy()})(t,e,s,i)})(t,a,n,r);const o=t.cache.json.get(d).platform,{collisionFilter:l}=o,h={label:"platform",isStatic:o.isStatic,collisionFilter:{category:l.category,group:l.group,mask:l.mask}};if(super(t.matter.world,s,i,n,void 0,h),e(this,"segmentCount"),e(this,"isVertical"),e(this,"hasCrate",!1),e(this,"hasEnemy",!1),this.segmentCount=a,this.isVertical=r,r){this.setAngle(90);const e=this.body;if(e){t.matter.world.remove(e);const a=this.getBounds(),n=a.height,r=a.width,o=t.matter.bodies.rectangle(s,i,n,r,{label:"platform",isStatic:!0,collisionFilter:{category:l.category,group:l.group,mask:l.mask}});this.setExistingBody(o)}}t.add.existing(this)}}const x=t=>{var e;const s=(null==(e=t.label)?void 0:e.toLowerCase())??"";return!("platform"===s&&t.gameObject instanceof v&&t.gameObject.isVertical)&&["platform","crate-big","crate-small"].includes(s)},E=t=>"duck"===t.label,C="FX_LAND",w={FX_LAND:{prefix:"fx-land/fx-land-",frames:18,loop:0,frameRate:30}};class P extends Phaser.GameObjects.Sprite{constructor(t,e,s){super(t,e,s,c,w[C].prefix+"0001.png"),this.setScale(.3),this.play(C),t.add.existing(this),this.once(Phaser.Animations.Events.ANIMATION_COMPLETE,(()=>{var t;(null==(t=this.anims.currentAnim)?void 0:t.key)===C&&this.destroy(!0)}))}}const B="DUCK_FALL",A="DUCK_IDLE",L="DUCK_JUMP",D="DUCK_RUN",I="DUCK_LAND",M="DUCK_BLAST",S={DUCK_FALL:{prefix:"player/fall/duck-fall-",frames:10,loop:0,frameRate:30},DUCK_DEAD:{prefix:"player/dead/duck-dead-",frames:10,loop:0,frameRate:30},DUCK_IDLE:{prefix:"player/idle/duck-idle-",frames:10,loop:0,frameRate:30},DUCK_JUMP:{prefix:"player/jump/duck-jump-",frames:12,loop:0,frameRate:30},DUCK_RUN:{prefix:"player/run/duck-run-",frames:14,loop:-1,frameRate:30},DUCK_LAND:{prefix:"player/land/duck-land-",frames:56,loop:0,frameRate:30},DUCK_BLAST:{prefix:"player/blast/duck-blast-",frames:19,loop:0,frameRate:30},DUCK_WOBBLE:{prefix:"player/wobble/duck-wobble-",frames:22,loop:-1,frameRate:30}};class R extends Phaser.Physics.Matter.Sprite{constructor(t,s,i){const a=t.cache.json.get(d);super(t.matter.world,s,i,c,S[A].prefix+"0001.png",{shape:a["duck-idle"]}),e(this,"cursors"),e(this,"wasd"),e(this,"isGrounded",!1),e(this,"groundContacts",new Set),e(this,"currentAnimKey",""),e(this,"isAlive",!0),e(this,"isLevelComplete",!1),e(this,"currentBarrel",null),e(this,"recentlyExitedBarrel",!1),e(this,"canEnterBarrels",!0),e(this,"isInBarrel",!1),e(this,"upIsDown",!1),e(this,"rightIsDown",!1),e(this,"leftIsDown",!1),e(this,"isPlayingLandAnimation",!1),e(this,"isNearEdge",!1),e(this,"isNearLeftEdge",!1),e(this,"isNearRightEdge",!1),e(this,"currentPlatformBounds",null),e(this,"coinCollectionTimer"),e(this,"coinCollectedDuringLanding",!1),e(this,"landingAnimationEventEmitted",!1),t.matter.world.on("collisionstart",this.handleCollisionStart,this),t.matter.world.on("collisionend",this.handleCollisionEnd,this),this.setFixedRotation(),this.setupControls(),this.playAnimation(A,!0),this.setDepth(10),this.isAlive=!0,this.isInBarrel=!1,this.currentBarrel=null,this.recentlyExitedBarrel=!1,this.canEnterBarrels=!0,this.isPlayingLandAnimation=!1,this.isNearEdge=!1,this.isNearLeftEdge=!1,this.isNearRightEdge=!1,this.currentPlatformBounds=null,this.coinCollectedDuringLanding=!1,t.add.existing(this)}setupControls(){var t,e;this.scene.sys.game.device.os.desktop&&(this.cursors=null==(t=this.scene.input.keyboard)?void 0:t.createCursorKeys(),this.wasd=null==(e=this.scene.input.keyboard)?void 0:e.addKeys("W,A,D"))}update(){var t;if(this.isAlive&&(this.getVelocity().x<-.1?this.flipX=!0:this.getVelocity().x>.1&&(this.flipX=!1),!this.isPlayingLandAnimation||!this.isLevelComplete))if(this.isInBarrel)this.handleInBarrelState();else{if(this.isGrounded?this.checkIfNearEdge():(this.isNearEdge=!1,this.isNearLeftEdge=!1,this.isNearRightEdge=!1),this.scene.sys.game.device.input.touch||(this.leftIsDown=this.cursors.left.isDown||this.wasd.A.isDown||!1,this.rightIsDown=this.cursors.right.isDown||this.wasd.D.isDown||!1,this.upIsDown=this.cursors.up.isDown||this.wasd.W.isDown||!1),!this.isLevelComplete&&(null==(t=this.anims.currentAnim)?void 0:t.key)!==M&&(this.leftIsDown&&this.setVelocity(-3,this.body.velocity.y),this.rightIsDown&&this.setVelocity(3,this.body.velocity.y),!this.isGrounded||this.leftIsDown||this.rightIsDown||this.setVelocity(0,0),this.upIsDown&&!this.isInBarrel&&this.isGrounded))return this.setVelocityY(-12),this.playAnimation(L,!0),void this.once(Phaser.Animations.Events.ANIMATION_COMPLETE,(()=>{this.isGrounded||this.playAnimation(B,!0)}));!this.isGrounded||!this.leftIsDown&&!this.rightIsDown||this.isLevelComplete?this.isGrounded||this.currentAnimKey===L||this.currentAnimKey===M?this.isGrounded&&(!this.isNearEdge||this.leftIsDown||this.rightIsDown||this.isLevelComplete?this.leftIsDown||this.rightIsDown||this.currentAnimKey===I||this.isLevelComplete||this.playAnimation(A,!1):(this.playAnimation("DUCK_WOBBLE"),this.isNearLeftEdge&&!this.isNearRightEdge?this.flipX=!0:this.isNearRightEdge&&!this.isNearLeftEdge&&(this.flipX=!1))):this.playAnimation(B):this.playAnimation(D)}}checkIfNearEdge(){if(!this.isGrounded||0===this.groundContacts.size)return this.isNearEdge=!1,this.isNearLeftEdge=!1,void(this.isNearRightEdge=!1);if(!this.currentPlatformBounds&&this.groundContacts.size>0){const t=Array.from(this.groundContacts)[0];if(t&&t.bounds){const{min:e,max:s}=t.bounds;this.currentPlatformBounds={left:e.x,right:s.x}}}if(this.currentPlatformBounds){const t=this.x,e=Math.abs(t-this.currentPlatformBounds.left),s=Math.abs(this.currentPlatformBounds.right-t);this.isNearLeftEdge=e<15,this.isNearRightEdge=s<15,this.isNearEdge=this.isNearLeftEdge||this.isNearRightEdge}else this.isNearEdge=!1,this.isNearLeftEdge=!1,this.isNearRightEdge=!1}playAnimation(t,e=!1){if(this.currentAnimKey===t){if(!e)return;this.anims.stop()}this.play(t),this.currentAnimKey=t}handleCollisionStart(t){this.isGrounded=!1;const e=this.groundContacts.size>0;for(const s of t.pairs){const{bodyA:t,bodyB:e}=s;E(t)?this.processCollision(e,s,!0):E(e)&&this.processCollision(t,s,!0)}this.isGrounded=this.groundContacts.size>0,!e&&this.isGrounded&&(this.currentPlatformBounds=null,this.coinCollectedDuringLanding||new P(this.scene,this.x,this.getBounds().bottom),this.isPlayingLandAnimation||!this.recentlyExitedBarrel&&!this.isLevelComplete||this.coinCollectedDuringLanding||(this.isPlayingLandAnimation=!0,this.playAnimation(I,!0),this.once(Phaser.Animations.Events.ANIMATION_COMPLETE,(()=>{this.isPlayingLandAnimation=!1,this.isLevelComplete?this.landingAnimationEventEmitted||(this.landingAnimationEventEmitted=!0,this.emit("landingAnimationComplete")):this.isGrounded&&(this.leftIsDown||this.rightIsDown?this.playAnimation(D):this.playAnimation(A))})),this.recentlyExitedBarrel&&(this.recentlyExitedBarrel=!1)),this.coinCollectedDuringLanding=!1)}handleCollisionEnd(t){for(const e of t.pairs){const{bodyA:t,bodyB:s}=e;E(t)?this.processCollision(s,e,!1):E(s)&&this.processCollision(t,e,!1)}this.isGrounded=this.groundContacts.size>0,this.isGrounded||(this.currentPlatformBounds=null)}processCollision(t,e,s){(x(t)||t.gameObject&&t.gameObject instanceof v&&t.gameObject.isVertical&&e.collision&&e.collision.normal.y<-.8)&&(s?this.groundContacts.add(t):this.groundContacts.delete(t))}handleInBarrelState(){var t,e,s,i;this.currentBarrel&&(this.setPosition(this.currentBarrel.x,this.currentBarrel.y),this.setVelocity(0,0),((null==(e=null==(t=this.cursors)?void 0:t.up)?void 0:e.isDown)||(null==(i=null==(s=this.wasd)?void 0:s.W)?void 0:i.isDown)||this.upIsDown)&&(this.currentBarrel.launch(),this.exitBarrel()))}enterBarrel(t){!this.isInBarrel&&this.body&&this.canEnterBarrels&&(this.isInBarrel=!0,this.currentBarrel=t,this.isGrounded=!1,this.isNearEdge=!1,this.isNearLeftEdge=!1,this.isNearRightEdge=!1,this.currentPlatformBounds=null,this.setStatic(!0),this.setVisible(!1),this.currentBarrel.enter())}exitBarrel(){if(console.log("[Player] exitBarrel called"),!this.isInBarrel||!this.currentBarrel||!this.body)return;const t=this.currentBarrel.angle;this.isInBarrel=!1,this.currentBarrel=null,this.setStatic(!1),this.setVisible(!0);const e=Phaser.Math.Vector2.RIGHT.clone().rotate(Phaser.Math.DegToRad(t)).scale(14);this.setVelocity(e.x,e.y),this.flipX=e.x<0,this.playAnimation(M,!0);const s=(t%360+360)%360;s>90&&s<270?this.setRotation(Phaser.Math.DegToRad(t+180)):this.setRotation(Phaser.Math.DegToRad(t)),this.once(Phaser.Animations.Events.ANIMATION_COMPLETE,(()=>{this.playAnimation(B,!1),this.setRotation(0),this.setFlipY(!1)})),this.recentlyExitedBarrel=!0,this.canEnterBarrels=!1,this.scene.time.delayedCall(300,(()=>{this.canEnterBarrels=!0}))}finishLevel(){this.isLevelComplete=!0,this.landingAnimationEventEmitted=!1,this.setVelocityX(0),this.isInBarrel&&this.exitBarrel(),!this.isGrounded||this.isPlayingLandAnimation||this.coinCollectedDuringLanding?this.isGrounded?this.scene.time.delayedCall(100,(()=>{this.landingAnimationEventEmitted||(this.landingAnimationEventEmitted=!0,this.emit("landingAnimationComplete"))})):this.once(Phaser.Animations.Events.ANIMATION_COMPLETE,(()=>{this.isGrounded&&this.isPlayingLandAnimation?this.once(Phaser.Animations.Events.ANIMATION_COMPLETE,(()=>{this.landingAnimationEventEmitted||(this.landingAnimationEventEmitted=!0,this.emit("landingAnimationComplete"))})):this.landingAnimationEventEmitted||(this.landingAnimationEventEmitted=!0,this.emit("landingAnimationComplete"))})):(this.isPlayingLandAnimation=!0,this.playAnimation(I,!0),this.once(Phaser.Animations.Events.ANIMATION_COMPLETE,(()=>{this.isPlayingLandAnimation=!1,this.landingAnimationEventEmitted||(this.landingAnimationEventEmitted=!0,this.emit("landingAnimationComplete"))})))}kill(){this.isAlive=!1,this.isInBarrel&&this.exitBarrel(),this.playAnimation("DUCK_DEAD"),this.setVelocityX(0),this.setVelocityY(0),this.setStatic(!0)}setRecentCoinCollection(){!this.isGrounded&&this.groundContacts.size>0&&(this.coinCollectedDuringLanding=!0),this.coinCollectionTimer&&this.scene.time.removeEvent(this.coinCollectionTimer)}}const G=t=>"coin"===t.label,k=t=>"finish"===t.label,N=t=>"enemy"===t.label,O=t=>"fallSensor"===t.label;function T(t){return t.label===h}let _=0,F=0;const X=()=>_;let V=0;const K=()=>V,z=(t=1)=>{V+=t};class U{constructor(t,s){e(this,"scene"),e(this,"camera"),this.scene=t,this.camera=this.scene.cameras.main,this.setupCamera(s)}setupBounds(){this.scene.matter.world.setBounds(0,0,1e4,4e3),this.camera.setBounds(0,0,1e4,4e3)}setupCamera(t){this.setupBounds(),this.camera.startFollow(t,!0,.5,.5),this.camera.setLerp(.5,.5),this.camera.setZoom(1.5)}handleZoomIn(){this.scene.tweens.add({targets:this.camera,zoom:2,duration:700,ease:"Power2"})}}const j=32,H="COIN_IDLE",Y="COIN_COLLECT",$={COIN_IDLE:{prefix:"coin/coin-idle/coin-idle-",frames:23,loop:-1,frameRate:30},COIN_COLLECT:{prefix:"coin/coin-collect/coin-collect-",frames:8,loop:0,frameRate:30}};class W extends Phaser.Physics.Matter.Sprite{constructor(t,e,s){const i=t.cache.json.get(d);super(t.matter.world,e,s,c,$[H].prefix+"0001.png",{shape:i.coin,isStatic:!0,isSensor:!0}),this.play(H),t.add.existing(this)}collect(){this.play(Y),this.scene.matter.world.remove(this),this.once(Phaser.Animations.Events.ANIMATION_COMPLETE,(()=>{var t;(null==(t=this.anims.currentAnim)?void 0:t.key)===Y&&this.destroy(!0)}))}}const Z=class t extends Phaser.Physics.Matter.Sprite{constructor(t,s,i,{shapeKey:a,animKey:n,scale:r=1}){const o=t.cache.json.get(d);super(t.matter.world,s,i,c,n,{shape:o[a]}),e(this,"speed"),e(this,"direction",1),e(this,"platformBounds"),this.speed=Phaser.Math.Between(1,1.3),1!==r&&this.setScale(r),t.add.existing(this),t.matter.world.on("collisionstart",this.handleCollisionStart,this),this.setFixedRotation()}handleGameOver(){this.setVelocity(0,0)}update(){if(!this.platformBounds)return;this.setVelocity(this.speed*this.direction,0);const{left:t,right:e}=this.getBounds(),{left:s,right:i}=this.platformBounds;e>=i&&1===this.direction?this.direction=-1:t<=s&&-1===this.direction&&(this.direction=1)}handleCollisionStart(e){if(this.platformBounds)return;const s=this.body,i=s.parts.map((t=>t.id));i.includes(s.id)||i.push(s.id);for(const{bodyA:a,bodyB:n}of e.pairs){let e=null,s=null;if(i.includes(a.id)&&x(n)?(e=a,s=n):i.includes(n.id)&&x(a)&&(e=n,s=a),e&&s){const e=s.id,i=t.platformCache.get(e);if(i)this.platformBounds=i;else{const{min:i,max:a}=s.bounds,n={left:i.x,right:a.x};t.platformCache.set(e,n),this.platformBounds=n}this.scene.matter.world.off("collisionstart",this.handleCollisionStart,this);break}}}};e(Z,"platformCache",new Map);let J=Z;const Q="ENEMY_IDLE",q={ENEMY_IDLE:{prefix:"enemy/enemy.png",frames:10,loop:0,frameRate:0}};class tt extends J{constructor(t,e,s){super(t,e,s,{shapeKey:l,animKey:q[Q].prefix,speed:1,scale:1})}}const et={BARREL_IDLE:{prefix:"barrel/launch/barrel-launch-0010",frames:1,loop:0,frameRate:0},BARREL_ENTER:{prefix:"barrel/enter/barrel-enter-",frames:19,loop:0,frameRate:30},BARREL_LAUNCH:{prefix:"barrel/launch/barrel-launch-",frames:10,loop:0,frameRate:30}};class st extends Phaser.Physics.Matter.Sprite{constructor(t,s,i){const a=t.cache.json.get(d);super(t.matter.world,s,i,c,void 0,{shape:a[h],isStatic:!0,isSensor:!0}),e(this,"isEntered",!1),this.angle=-90,this.setOrigin(.22,.5),this.play("BARREL_IDLE"),t.add.existing(this)}update(){this.isEntered&&(this.angle+=2)}enter(){this.play("BARREL_ENTER"),this.isEntered=!0}launch(){if(!this.isEntered)return null;this.play("BARREL_LAUNCH"),this.isEntered=!1;const t=Phaser.Math.DegToRad(this.angle);return new Phaser.Math.Vector2(15*Math.cos(t),15*Math.sin(t))}}class it extends J{constructor(t,e,s){super(t,e,s,{shapeKey:l,animKey:q[Q].prefix}),this.setScale(.6)}}function at(t,e,s,i,a=!1,n=!1,r=!1){const o=e.getBounds(),l=o.width;let h=0;if(e.hasCrate)return 0;if(n)return 0;if(r)return 0;const c=Math.floor(l/50);let d;if(a)d=c;else{const t=Math.min(3,Math.floor(.5*c));d=Math.max(t,s.nextInt(Math.floor(.3*c),c+1))}if(d>0){const e=(l-50*(d-1))/2,s=o.top-14-5;for(let a=0;a<d;a++){const n=o.left+e+50*a,r=new W(t,n,s);i.push(r),h++}}return h}const nt={CRATE_BIG_IDLE:{prefix:"crate/crate-big.png",frames:1,loop:0,frameRate:0}};class rt extends Phaser.Physics.Matter.Sprite{constructor(t,e,s){const i=t.cache.json.get(d);super(t.matter.world,e,s,c,nt.CRATE_BIG_IDLE.prefix,{shape:i["crate-big"]}),t.add.existing(this)}}const ot={CRATE_SMALL_IDLE:{prefix:"crate/crate-small.png",frames:1,loop:0,frameRate:0}};class lt extends Phaser.Physics.Matter.Sprite{constructor(t,e,s){const i=t.cache.json.get(d);super(t.matter.world,e,s,c,ot.CRATE_SMALL_IDLE.prefix,{shape:i["crate-small"]}),t.add.existing(this)}}const ht={FINISH_IDLE:{prefix:"finish/finish-idle/finish-idle",frames:1,loop:0,frameRate:0},FINISH_ACTIVATED:{prefix:"finish/finish-activated/finish-activated-",frames:19,loop:0,frameRate:30},FINISH_ACTIVE:{prefix:"finish/finish-active/finish-active-",frames:8,loop:-1,frameRate:30}};class ct extends Phaser.Physics.Matter.Sprite{constructor(t,s,i){const a=t.cache.json.get(d);super(t.matter.world,s,i,c,void 0,{shape:a.finish,isStatic:!0,isSensor:!0}),e(this,"isActivated",!1),this.setOrigin(.3,.5),this.setDepth(5),this.play("FINISH_IDLE"),t.add.existing(this)}activate(){this.isActivated||(this.play("FINISH_ACTIVATED"),this.isActivated=!0)}}class dt{constructor(t){e(this,"seed"),this.seed=t}next(){let t=this.seed+=1831565813;return t=Math.imul(t^t>>>15,1|t),t^=t+Math.imul(t^t>>>7,61|t),((t^t>>>14)>>>0)/4294967296}nextInt(t,e){return Math.floor(this.next()*(e-t)+t)}choice(t){return t[this.nextInt(0,t.length)]}}class ut{constructor(t,s,i){e(this,"scene"),e(this,"levelNumber"),e(this,"prng"),e(this,"platforms",[]),e(this,"coins",[]),e(this,"enemies",[]),e(this,"crates",[]),e(this,"barrels",[]),e(this,"player"),e(this,"debugGraphics",null),e(this,"isDebugActive",!1),e(this,"levelMinX",0),e(this,"levelMaxX",0),e(this,"levelLowestY",0),e(this,"PLATFORM_DISPLAY_HEIGHT",32),e(this,"bridgeBarrelRanges",[]),this.scene=t,this.debugGraphics=s,this.isDebugActive=i}generateLevel(){this.levelNumber=K(),this.prng=new dt(this.levelNumber);const t=ut.calculateLevelGenerationParams(this.levelNumber),e=this.prng.nextInt(t.minPlatforms,t.maxPlatforms+1);let s=180,i=300,a=0,n=null;const r=[],o=[];this.platforms=[],this.enemies=[],this.coins=[],this.crates=[],this.barrels=[],this.bridgeBarrelRanges=[],this.createPlayerStart({x:s,y:i});const l=this.prng.nextInt(t.minPlatformLength,t.maxPlatformLength+1),h=this.createPlatform({x:s,y:i},l,0);n=h,o.push({platform:h,x:s,y:i});for(let u=1;u<e;u++){let a=this.prng.nextInt(t.minPlatformLength,t.maxPlatformLength+1),{nextX:l,nextY:h,dX:c}=this.calculateNextPlatformPosition({x:s,y:i},a,n,t),d=!1,g=0,m=0,p=null;if(c>t.maxHorizontalGap&&u<e-1){g=n.getBounds().right+c/2,p={start:g-35,end:g+35};let e=!1;for(const t of this.bridgeBarrelRanges)if(p.start<t.end&&p.end>t.start){e=!0;break}if(e){const e=t.maxHorizontalGap,s=a*j/2;l=n.getBounds().right+e+s,d=!1}else{const t=10;m=n.getBounds().top+50+t,m=Math.min(m,1/0),d=!0}}else if(c>t.maxHorizontalGap){const e=t.maxHorizontalGap,s=a*j/2;l=n.getBounds().right+e+s,d=!1}if(d){const t=new st(this.scene,g,m);this.barrels.push(t),this.bridgeBarrelRanges.push(p),s=n.getBounds().right+c+35}else{const t=u===e-1,c=this.createPlatform({x:l,y:h},a,t?-1:u);r.push(c),n=c,o.push({platform:c,x:l,y:h}),s=l,i=h}}this.addVerticalWallsAtPlatformEdges(o);const c=n;this.createFinishPoint(c);let d=[...r];if(1===this.levelNumber&&this.platforms.length>=3){const t=this.platforms[1],e=this.platforms[2];d=d.filter((s=>s!==t&&s!==e))}return this.placeEnemies(d,t),this.placeAdditionalRandomCrates(d),this.platforms.forEach(((t,e)=>{const s=this.platformHasEnemy(t),i=0===e,n=t===c;s||t.hasCrate?a+=at(this.scene,t,this.prng,this.coins,!1,i,n):a+=at(this.scene,t,this.prng,this.coins,!0,i,n)})),this.calculateOverallBounds(),F=a,this.player}static calculateLevelGenerationParams(t){const e=Math.floor(1.5*(10+t)),s=Math.floor(1.5*(15+t)),i=Math.min(.8,1.6*(.3+Math.min(.3,.02*t))),a=.25+Math.min(.2,.01*t),n=.15+Math.min(.1,.01*t),r=(e+s)/2,o=Math.floor(r*i),l=Math.floor(r*a);let h=Math.floor(r*n);h=Math.max(1,h);const c=o+l+h+2,d=Math.max(e,c);return{minPlatforms:d,maxPlatforms:Math.max(d,s),minPlatformLength:4,maxPlatformLength:12,minHorizontalGap:120,maxHorizontalGap:150,minVerticalGap:-120,maxVerticalGap:140,enemyProbability:i,crateProbability:a,barrelProbability:n,requiredCoins:150,targetEnemies:o,targetCrates:l,targetBarrels:h}}createPlayerStart(t){this.player=new R(this.scene,t.x,t.y-50-this.PLATFORM_DISPLAY_HEIGHT/2)}calculateNextPlatformPosition(t,e,s,i){let a=0,n=t.x,r=t.y;if(s){const t=s.getBounds(),o=e*j/2,l=1.2*i.maxHorizontalGap;a=this.prng.nextInt(i.minHorizontalGap,l+1);let h=this.prng.nextInt(i.minVerticalGap,i.maxVerticalGap+1);Math.abs(h)<40&&(h=h>=0?40:-40,h=Phaser.Math.Clamp(h,i.minVerticalGap,i.maxVerticalGap)),n=t.right+a+o,r=s.y+h;const c=100,d=1/0;r=Phaser.Math.Clamp(r,c,d)}return{nextX:n,nextY:r,dX:a}}createPlatform(t,e,s,i=!1){let a="middle";0===s?a="start":-1===s&&(a="end");const n=`platform-${a}-${e}${i?"-vertical":""}`,r=new v(this.scene,t.x,t.y,e,n,i);return this.platforms.push(r),r}createVerticalWall(t,e){return this.createPlatform(t,e,-2,!0)}createFinishPoint(t){if(!t)return;const e=t.getBounds(),s=e.right-40,i=e.top-60;new ct(this.scene,s,i)}calculateOverallBounds(){if(0===this.platforms.length)return this.levelMinX=0,this.levelMaxX=1e3,void(this.levelLowestY=1/0);const t=this.platforms[0].getBounds();this.levelMinX=t.left,this.levelMaxX=t.right,this.levelLowestY=t.bottom;for(let e=1;e<this.platforms.length;e++){const t=this.platforms[e].getBounds();this.levelMinX=Math.min(this.levelMinX,t.left),this.levelMaxX=Math.max(this.levelMaxX,t.right),this.levelLowestY=Math.max(this.levelLowestY,t.bottom)}}getEnemies(){return this.enemies}getPlatforms(){return this.platforms}getCoins(){return this.coins}removeCoin(t){this.coins=this.coins.filter((e=>e!==t))}getCrates(){return this.crates}getBarrels(){return this.barrels}getOverallLevelBounds(){return{minX:this.levelMinX,maxX:this.levelMaxX,lowestY:this.levelLowestY}}addVerticalWallsAtPlatformEdges(t){const e=[...t].sort(((t,e)=>t.x-e.x)),s=[];for(let i=0;i<e.length-1;i++){const t=e[i].platform,a=e[i+1].platform;if(t.isVertical||a.isVertical)continue;const n=t.getBounds(),r=a.getBounds(),o=r.left-n.right,l=r.top-n.top;if(l<-84&&o>20&&o<225){const e=Math.abs(l),i=Math.ceil(e/j)+2,a=n.right+20,r=i*j,o=n.top-r/2,h=this.createVerticalWall({x:a,y:o},i);if(s.push({wallX:a,wallY:o,wallHeight:i,platformBelow:t,wall:h}),this.isDebugActive&&this.debugGraphics){const t=this.debugGraphics;t.lineStyle(4,16711680,1),t.strokeRect(a-5,o-r/2,10,r)}}}this.placeStrategicCratesNearWalls(s)}placeStrategicCratesNearWalls(t){if(0===t.length)return void console.log("No walls to place crates near");const e=new Set;for(let s=0;s<t.length;s++){const i=t[s],a=i.platformBelow;if(e.has(a))continue;const n=a.getBounds(),r=n.top,o=i.wallHeight*j;let l=null,h=0,c=0,d=0;const u=r-(i.wallY-o/2)>152;if(u||!u&&this.prng.next()>.6?(d=64,h=Math.min(n.right-40,i.wallX-30),c=n.top-d/2,l=new rt(this.scene,h,c)):(d=32,h=Math.min(n.right-40,i.wallX-30),c=n.top-d/2,l=new lt(this.scene,h,c)),l&&(this.crates.push(l),e.add(a),a.hasCrate=!0,this.isDebugActive&&this.debugGraphics)){const t=this.debugGraphics;t.lineStyle(4,65280,1),t.strokeRect(h-d/2,c-d/2,d,d)}}}placeEnemies(t,e){!function(t,e,s,i,a){if(0===e.length)return;const n=(t=>{for(let e=t.length-1;e>0;e--){const i=s.nextInt(0,e+1);[t[e],t[i]]=[t[i],t[e]]}return t})([...e]),r=i.targetEnemies,o=r,l=n.slice(0,Math.min(o,n.length)),h=new Set;let c=0;for(let d=0;d<l.length&&c<r;d++){if(h.has(d))continue;const e=l[d];if(e.segmentCount>=12){const i=e.getBounds(),n=i.centerX;let r=!1;c>0&&s.next()>=.5&&(r=!0);const o=r?94:40,l=i.top-o/2-14,u=r?new tt(t,n,l):new it(t,n,l);a.push(u),c++,h.add(d)}}}(this.scene,t,this.prng,e,this.enemies)}platformHasEnemy(t){const e=t.getBounds();for(const s of this.enemies){const t=s.getBounds();if(Math.abs(t.bottom-e.top)<2&&t.right>e.left&&t.left<e.right)return!0}return!1}respawnCrates(t){return this.crates.forEach((t=>{t&&t.body&&t.destroy()})),this.crates=[],t.forEach((t=>{let e;e="big"===t.type?new rt(this.scene,t.x,t.y):new lt(this.scene,t.x,t.y),this.crates.push(e)})),this.crates}placeAdditionalRandomCrates(t){if(0===t.length)return;const e=t.filter((t=>!t.hasCrate&&!this.platformHasEnemy(t))),s=Math.max(1,Math.floor(e.length*this.prng.next()*.1+.1));for(let i=0;i<s&&i<e.length;i++){const t=this.prng.nextInt(0,e.length),s=e[t];e.splice(t,1);const i=s.getBounds(),a=this.prng.next()>.5;let n,r;const o=i.left+40,l=i.right-40;if(l-o<20)continue;const h=this.prng.nextInt(o,l);if(a){r=32;const t=i.top-r/2;n=new lt(this.scene,h,t)}else{r=64;const t=i.top-r/2;n=new rt(this.scene,h,t)}if(this.crates.push(n),s.hasCrate=!0,this.isDebugActive&&this.debugGraphics){const t=this.debugGraphics;t.lineStyle(4,65535,1),t.strokeRect(h-r/2,i.top-r,r,r)}}}}class gt extends i.GameObjects.TileSprite{constructor(t,s,i,a,n,r=.5){super(t,0,0,a,n,s,i),e(this,"customScrollFactorX"),this.customScrollFactorX=r,this.setOrigin(0,0),this.setScrollFactor(0,0),t.add.existing(this)}update(){this.tilePositionX=this.scene.cameras.main.scrollX*this.customScrollFactorX}}class mt{constructor(t){e(this,"scene"),e(this,"backgroundLayer"),e(this,"middleLayer"),e(this,"foregroundLayer"),e(this,"levelWidth",0),e(this,"bgScrollFactorX"),e(this,"midScrollFactorX"),e(this,"fgScrollFactorX"),e(this,"createLayer",((t,e,s,i,a,n)=>{const r=this.scene.scale.height,o=this.scene.textures.getFrame(t,e).height*a,l=r-o+i,h=new gt(this.scene,t,e,this.levelWidth,o,n);return h.y=l,h.setDepth(s),h})),this.scene=t}initialize(t){this.levelWidth=Math.max(t,this.scene.scale.width),this.createLayers()}createLayers(){this.bgScrollFactorX=.2,this.midScrollFactorX=1.5,this.fgScrollFactorX=2,this.backgroundLayer=this.createLayer(c,"bg/background.png",-3,-220,1,this.bgScrollFactorX),this.middleLayer=this.createLayer(c,"bg/middle-ground.png",-2,-250,1,this.midScrollFactorX),this.foregroundLayer=this.createLayer(c,"bg/foreground.png",3,-180,1,this.fgScrollFactorX)}update(){this.backgroundLayer&&this.middleLayer&&this.foregroundLayer&&(this.backgroundLayer.update(),this.middleLayer.update(),this.foregroundLayer.update())}}class pt extends s.Scene{constructor(){super(r),e(this,"player"),e(this,"overlayButton"),e(this,"restartTriggered",!1),e(this,"physicsEnabled",!1),e(this,"gameState","waiting_to_start"),e(this,"enemies",[]),e(this,"barrels",[]),e(this,"cameraManager"),e(this,"levelGenerator"),e(this,"parallaxManager"),e(this,"totalBarrelsGenerated",0),e(this,"culledBarrelsCount",0),e(this,"physicsDebugActive",!1),e(this,"debugGraphics"),e(this,"initialPhysicsDebugState",!1),e(this,"restartKeys",[]),e(this,"originalCratePositions",[]),e(this,"handleCollisionStart",(({pairs:t})=>{if(this.physicsEnabled)for(const{bodyA:e,bodyB:s}of t){if(this.checkFallSensorCollision(e,s))return;if(this.checkEnemyCollision(e,s))return;if(this.checkFinishCollision(e,s))return;if(this.checkCoinCollision(e,s))return;if(this.checkBarrelCollision(e,s))return}}))}create(){this.restartTriggered=!1,this.parallaxManager=new mt(this),this.setupWorldBounds(),this.initGame(),this.startGame(),this.createDebugUI(),this.setupRestartKeys(),this.sys.game.device.input.touch&&this.createMobileControls()}createDebugUI(){this.debugGraphics&&this.debugGraphics.destroy(),this.debugGraphics=this.add.graphics().setAlpha(1).setDepth(9999),this.matter.world.debugGraphic=this.debugGraphics,this.matter.world.drawDebug=this.initialPhysicsDebugState,this.physicsDebugActive=this.initialPhysicsDebugState,this.debugGraphics.setVisible(this.initialPhysicsDebugState),this.game.events.on("togglePhysicsDebug",this.togglePhysicsDebug,this),this.scene.isActive(o)||this.scene.launch(o)}setupWorldBounds(){this.matter.world.setBounds(0,0,u,g),this.matter.world.enabled=!1}initGame(){if(_=0,F=0,V=0,0===K()&&(V=1),this.enemies=[],this.barrels=[],this.generateLevelEntities(),this.setupCollisions(),!this.player)throw new Error("Player not created during level generation!");this.cameraManager=new U(this,this.player)}generateLevelEntities(){this.levelGenerator=new ut(this,this.debugGraphics,this.physicsDebugActive),this.player=this.levelGenerator.generateLevel(),this.enemies=this.levelGenerator.getEnemies(),this.barrels=this.levelGenerator.getBarrels(),this.totalBarrelsGenerated=this.barrels.length,this.originalCratePositions=[],this.levelGenerator.getCrates().forEach((t=>{this.originalCratePositions.push({x:t.x,y:t.y,type:t instanceof rt?"big":"small"})}));const t=this.levelGenerator.getOverallLevelBounds(),{minX:e,maxX:s,lowestY:i}=t,a=e===-1/0?0:e,n=s===1/0?a:s,r=Math.max(n-a,this.scale.width);this.parallaxManager&&this.parallaxManager.initialize(r),this.createDeathZones(r,a,n,i)}createDeathZones(t,e,s,i){if(t<2e3)return void this.createFallSensor(i,e+(s-e)/2,t+1e3);const a=Math.ceil(t/1800);for(let n=0;n<a;n++){const t=e+1800*n,a=Math.min(t+2e3,s),r=t+(a-t)/2,o=a-t;this.createFallSensor(i,r,o)}}createFallSensor(t,e,s){const i=t+500+50;this.matter.add.rectangle(e,i,s,100,{isSensor:!0,isStatic:!0,label:"fallSensor",collisionFilter:{group:0,category:16,mask:23}})}togglePhysicsDebug(){this.physicsDebugActive=!this.physicsDebugActive,this.matter.world.drawDebug=this.physicsDebugActive,this.debugGraphics.setVisible(this.physicsDebugActive)}startGame(){this.gameState=m,this.matter.world.enabled=!0,this.physicsEnabled=!0}setupCollisions(){this.matter.world.on("collisionstart",this.handleCollisionStart)}checkFallSensorCollision(t,e){if(O(t)&&E(e)||O(e)&&E(t))return this.handleGameOver(),!0;const s=t.label&&("crate-small"===t.label||"crate-big"===t.label),i=e.label&&("crate-small"===e.label||"crate-big"===e.label);if(O(t)&&i||O(e)&&s){const i=s?t:e;if(i&&i.gameObject){const t=i.gameObject;t&&t.destroy();const e=this.levelGenerator.getCrates();if(e){const t=e.findIndex((t=>t===i.gameObject));t>=0&&e.splice(t,1)}}return!0}return!1}checkEnemyCollision(t,e){return!!(N(t)&&E(e)||N(e)&&E(t))&&(this.handleGameOver(),!0)}checkFinishCollision(t,e){return!!(k(t)&&E(e)||k(e)&&E(t))&&(k(t)?t.gameObject.activate():k(e)&&e.gameObject.activate(),this.handleLevelComplete(),!0)}checkCoinCollision(t,e){return G(t)&&E(e)?(this.collectCoin(t),!0):!(!G(e)||!E(t)||(this.collectCoin(e),0))}collectCoin(t){const e=t.gameObject;var s;e&&(this.levelGenerator.removeCoin(e),e.collect(),s=X()+1,_=s,this.player instanceof R&&this.player.setRecentCoinCollection())}update(){if(this.parallaxManager.update(),!this.physicsEnabled)return;this.player.update(),this.enemies.forEach((t=>t.update()));const t=this.cameras.main,e=new s.Geom.Rectangle(t.worldView.x-100,t.worldView.y-100,t.worldView.width+200,t.worldView.height+200);let i=0,a=0;this.levelGenerator.getCoins().forEach((t=>{const a=s.Geom.Rectangle.Overlaps(e,t.getBounds());t.setVisible(a),t.setActive(a),a||i++})),this.enemies.forEach((t=>{const i=s.Geom.Rectangle.Overlaps(e,t.getBounds());t.setVisible(i),t.setActive(i),i||a++})),this.culledBarrelsCount=0,this.barrels.forEach((t=>{const i=s.Geom.Rectangle.Overlaps(e,t.getBounds());t.setVisible(i),t.setActive(i),i?t.update():this.culledBarrelsCount++}));const n={PlayerPos:{x:Math.round(this.player.x),y:Math.round(this.player.y)},Platforms:this.levelGenerator.getPlatforms().length,Enemies:this.enemies.length,CulledEnemies:a,Coins:this.levelGenerator.getCoins().length,CulledCoins:i,Crates:this.levelGenerator.getCrates().length,Barrels:this.totalBarrelsGenerated,CulledBarrels:this.culledBarrelsCount};this.events.emit("updateDebugData",n)}handleGameOver(){this.gameState===m&&(this.player.kill(),this.physicsEnabled=!1,this.enemies.forEach((t=>t.handleGameOver())),this.cameraManager.handleZoomIn(),this.gameState=p,this.restartLevel())}createMobileControls(){this.createMobileButton(100,800,(()=>this.player.leftIsDown=!0),(()=>this.player.leftIsDown=!1),{angle:0}),this.createMobileButton(300,800,(()=>this.player.rightIsDown=!0),(()=>this.player.rightIsDown=!1),{angle:-180}),this.createMobileButton(1100,800,(()=>this.player.upIsDown=!0),(()=>this.player.upIsDown=!1),{angle:90})}createMobileButton(t,e,s,i,{angle:a}){const n=this.add.image(t,e,c,"ui/direction-button.png").setScrollFactor(1).setInteractive().setAngle(a).setDepth(1e4);return n.on("pointerdown",(()=>{s()})),n.on("pointerup",(()=>{i()})),n}handleLevelComplete(){this.gameState===m&&(this.gameState=f,this.player.finishLevel(),z(1),this.enemies.forEach((t=>t.handleGameOver())),this.cameraManager.handleZoomIn(),this.player.once(Phaser.Animations.Events.ANIMATION_COMPLETE,(()=>{this.showContinueButton()})))}showContinueButton(){console.log("level complete"),this.scene.get(o).showContinueButton()}restartLevel(){if(!this.restartTriggered){if(this.restartTriggered=!0,this.overlayButton&&(this.overlayButton.off("pointerup"),this.overlayButton.destroy(),this.overlayButton=void 0),this.gameState===f)return z(),void this.scene.restart({keepPhysicsDebug:this.physicsDebugActive});this.gameState===p&&this.respawnCrates(),this.scene.restart({keepPhysicsDebug:this.physicsDebugActive})}}respawnCrates(){this.levelGenerator&&this.originalCratePositions.length>0&&(console.log(`Respawning ${this.originalCratePositions.length} crates`),this.levelGenerator.respawnCrates(this.originalCratePositions))}checkBarrelCollision(t,e){let s=null,i=null;if(E(t)&&T(e)?(s=t,i=e):E(e)&&T(t)&&(s=e,i=t),s&&i){const t=i.gameObject;if(t&&!this.player.isInBarrel&&this.player.canEnterBarrels)return console.log("[Game] Player collided with barrel",t),this.player.enterBarrel(t),!0}return!1}setupRestartKeys(){this.restartKeys.forEach((t=>t.removeAllListeners())),this.restartKeys=[];const t=this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE),e=this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.ENTER);t.on("down",(()=>this.restartLevel())),e.on("down",(()=>this.restartLevel())),this.restartKeys.push(t,e)}shutdown(){this.restartKeys&&(this.restartKeys.forEach((t=>{t&&t.removeAllListeners()})),this.restartKeys=[]),this.game&&this.game.events&&this.game.events.off("togglePhysicsDebug",this.togglePhysicsDebug,this),this.matter&&this.matter.world&&this.matter.world.off("collisionstart",this.handleCollisionStart),this.overlayButton&&(this.overlayButton.off("pointerup"),this.overlayButton.destroy(),this.overlayButton=void 0)}init(t){t&&void 0!==t.keepPhysicsDebug?this.initialPhysicsDebugState=t.keepPhysicsDebug:this.initialPhysicsDebugState=!1}}class ft extends s.Scene{constructor(){super(n),e(this,"background"),e(this,"logo"),e(this,"playButton")}create(){const{width:t,height:e}=this.scale;let s;this.background=this.add.image(t/2,e/2,c,"ui/main-menu/background.png"),s=t/e>this.background.width/this.background.height?t/this.background.width:e/this.background.height,this.background.setScale(s).setScrollFactor(0),this.logo=this.add.image(t/2,.4*e,c,"ui/main-menu/title.png"),this.playButton=this.add.image(t/2,.75*e,c,"ui/main-menu/play-game.png").setInteractive({useHandCursor:!0}),this.playButton.on("pointerdown",(()=>{this.startGame()})),this.input.keyboard&&this.input.keyboard.on("keydown-SPACE",(()=>{this.startGame()})),this.input.keyboard&&this.input.keyboard.on("keydown-ENTER",(()=>{this.startGame()}))}startGame(){this.scene.start(r)}}function yt(t,e,s){Object.entries(s).forEach((([s,i])=>{i.frames<=1?t.create({key:s,frames:[{key:e,frame:`${i.prefix}.png`}],repeat:0}):t.create({key:s,frames:t.generateFrameNames(e,{prefix:i.prefix,start:1,end:i.frames,zeroPad:4,suffix:".png"}),repeat:i.loop,frameRate:i.frameRate})}))}class bt extends s.Scene{constructor(){super(a),e(this,"loadingText",null)}init(){const t=this.cameras.main.centerX,e=this.cameras.main.centerY;this.add.rectangle(t,e,468,32).setStrokeStyle(1,16777215);const s=this.add.rectangle(t-234+2+2,e,4,28,16777215);this.loadingText=this.add.text(t,e-32-50,"Loading: 0%",{fontFamily:"Arial",fontSize:"50px",color:"#ffffff"}).setOrigin(.5),this.load.on("progress",(t=>{var e;s.width=Math.round(4+460*t),null==(e=this.loadingText)||e.setText(`Loading: ${Math.round(100*t)}%`)}))}preload(){this.load.setPath("assets"),this.load.multiatlas(c,"assets.json"),this.load.json(d,"physics.json")}create(){var t;this.setupAnimations(),null==(t=this.loadingText)||t.destroy(!0),this.loadingText=null,this.scene.start(n)}setupAnimations(){yt(this.game.anims,c,S),yt(this.game.anims,c,$),yt(this.game.anims,c,ht),yt(this.game.anims,c,w),yt(this.game.anims,c,et)}}class vt{constructor(t,s,i){e(this,"scene"),e(this,"text"),e(this,"active",!1),this.scene=t,this.text=this.scene.add.text(s,i,"Debug Panel (Press Q)",{fontSize:"24px",color:"#ffffff",backgroundColor:"rgba(0,0,0,0.7)",padding:{x:8,y:5}}),this.text.setOrigin(1,0),this.text.setScrollFactor(0),this.text.setDepth(100),this.text.setVisible(this.active),this.scene.scale.on("resize",this.handleResize,this),this.handleResize()}handleResize(){const t=this.scene.scale.width-10;this.text.setPosition(t,10);const e=Math.min(this.scene.scale.displayScale.x,this.scene.scale.displayScale.y),s=Math.max(12,Math.round(24*e));this.text.setFontSize(`${s}px`)}toggle(){this.active=!this.active,this.text.setVisible(this.active)}update(t){if(!this.active)return;let e=`FPS: ${Math.round(this.scene.game.loop.actualFps)}\nDebug Panel (Q)\n-----------------\n`;const s=["PlayerPos","Platforms","Enemies","CulledEnemies","Coins","CulledCoins","Crates","Barrels","CulledBarrels"];for(const i of s)if(Object.prototype.hasOwnProperty.call(t,i)){const s=t[i];e+="PlayerPos"===i&&"object"==typeof s&&null!==s?`${i}: x=${Math.round(s.x)}, y=${Math.round(s.y)}\n`:"number"==typeof s?`${i}: ${s}\n`:`${i}: ${JSON.stringify(s)}\n`,delete t[i]}for(const i in t)if(Object.prototype.hasOwnProperty.call(t,i)){const s=t[i];e+=`${i}: ${JSON.stringify(s)}\n`}this.text.setText(e)}destroy(){this.scene.scale.off("resize",this.handleResize,this),this.text.destroy()}}class xt{constructor(t){e(this,"scene"),e(this,"text"),this.scene=t,this.text=this.scene.add.text(16,16,"Coins: 0 / 0",{fontFamily:"Roboto",fontSize:"36px",color:"#ffffff",stroke:"#000000",strokeThickness:3}).setOrigin(0,0).setScrollFactor(0).setDepth(100),this.scene.scale.on("resize",this.handleResize,this)}handleResize(){this.text.setPosition(16,16)}update(){this.text.setText(`Coins: ${X()} / ${F}`)}destroy(){this.scene.scale.off("resize",this.handleResize,this),this.text.destroy()}}class Et{constructor(t){e(this,"scene"),e(this,"text"),this.scene=t,this.text=this.scene.add.text(16,72,"Level: 0",{fontFamily:"Roboto",fontSize:"36px",color:"#ffffff",stroke:"#000000",strokeThickness:3}).setOrigin(0,0).setScrollFactor(0).setDepth(100),this.scene.scale.on("resize",this.handleResize,this),this.handleResize()}handleResize(){this.text.setPosition(16,72);const t=Math.min(this.scene.scale.displayScale.x,this.scene.scale.displayScale.y),e=Math.max(12,Math.round(36*t));this.text.setFontSize(`${e}px`)}update(){this.text.setText("Level: "+K())}destroy(){this.scene.scale.off("resize",this.handleResize,this),this.text.destroy()}}class Ct extends i.Scene{constructor(){super(o),e(this,"debugPanel"),e(this,"coinUI"),e(this,"levelUI"),e(this,"overlayButton")}create(){var t;console.log("DebugUIScene created"),this.debugPanel=new vt(this,this.scale.width-10,10),this.coinUI=new xt(this),this.levelUI=new Et(this),this.overlayButton=this.add.image(this.scale.width/2,this.scale.height/2,c,"ui/continue.png").setScrollFactor(0).setInteractive().setDepth(1e4).setOrigin(.5),this.overlayButton.visible=!1,this.overlayButton.on("pointerup",(()=>{this.overlayButton.destroy(),this.scene.get(r).restartLevel()})),console.log("hello photonstorm");const e=this.scene.get(r);e&&(e.events.on("updateDebugData",this.handleDebugDataUpdate,this),this.events.on(i.Scenes.Events.SHUTDOWN,(()=>{console.log("DebugUIScene shutting down, removing listener"),e.events.off("updateDebugData",this.handleDebugDataUpdate,this),this.levelUI.destroy(),this.coinUI.destroy()}))),null==(t=this.input.keyboard)||t.on("keydown-Q",(()=>{this.debugPanel.toggle(),this.game.events.emit("togglePhysicsDebug")}))}handleDebugDataUpdate(t){this.debugPanel.update(t)}showContinueButton(){this.overlayButton.visible=!0}hideContinueButton(){this.overlayButton.visible=!1}update(){this.coinUI.update(),this.levelUI.update()}}const wt={type:Phaser.AUTO,width:1920,height:1080,parent:"game-container",backgroundColor:"#028af8",scale:{mode:Phaser.Scale.EXPAND,autoCenter:Phaser.Scale.CENTER_BOTH},physics:{default:"matter",matter:{gravity:{x:0,y:1},debug:{showAxes:!1,showAngleIndicator:!0,showBounds:!1,showCollisions:!0,showConvexHulls:!0,showInternalEdges:!1,showPositions:!0,showSeparation:!1,showVelocity:!0,renderFill:!0,renderLine:!0,lineColor:65280,fillColor:65280,fillOpacity:.1,lineOpacity:1,lineThickness:1,staticFillColor:255,staticLineColor:255}}},scene:[y,bt,ft,pt,Ct]},Pt=()=>{window.innerWidth<window.innerHeight?(console.log("Portrait"),addEventListener("resize",Pt)):(removeEventListener("resize",Pt),console.log("Landscape"),new s.Game(wt))};window.innerWidth<window.innerHeight?(console.log("Portrait"),addEventListener("resize",Pt)):(console.log("Landscape"),new s.Game(wt));
